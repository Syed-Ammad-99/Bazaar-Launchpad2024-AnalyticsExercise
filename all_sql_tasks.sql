--Tasks:1. Data Exploration

-- Total number of orders

SELECT COUNT(DISTINCT order_number) AS total_order_number
FROM  sample1


--Total sales revenue

SELECT SUM(amount_per_unit*ordered_quantity-item_discount) AS total_sales_revenue
FROM  sample1
WHERE order_status NOT IN ('CANCELLED','INVALID')


--Distribution of orders by warehouse and store

SELECT order_warehouse_id AS warehouse, store_id AS store, COUNT(DISTINCT order_number) AS total_orders
FROM  sample1
GROUP BY order_warehouse_id , store_id


--Top selling items

SELECT item_id AS item, SUM(ordered_quantity) AS total_quantity_sold
FROM  sample1
WHERE order_status NOT IN ('CANCELLED','INVALID')
GROUP BY item_id
ORDER BY total_quantity_sold DESC
LIMIT 5

--Tasks:2. Analytical Questions

--Overall discount rate (average discount per item sold)

SELECT AVG(item_discount) AS average_discount_rate
FROM sample1
WHERE order_status NOT IN ('CANCELLED','INVALID')


--Warehouse has the highest average order value

SELECT order_warehouse_id,
SUM(amount_per_unit * ordered_quantity - (item_discount))/ COUNT(DISTINCT order_number) AS average_order_value
FROM sample1
WHERE order_status NOT IN ('CANCELLED','INVALID') AND order_warehouse_id IS NOT NULL
GROUP BY order_warehouse_id
ORDER BY average_order_value DESC
LIMIT 1

--total revenue generated by each store

SELECT DISTINCT store_id AS store,
SUM(amount_per_unit * ordered_quantity - (item_discount)) AS total_revenue
FROM sample1
WHERE order_status NOT IN ('CANCELLED','INVALID') 
GROUP BY store

-- top 5 customers

SELECT DISTINCT order_number AS customer,
SUM(amount_per_unit * ordered_quantity - (item_discount)) AS total_amount_spent
FROM sample1
WHERE order_status NOT IN ('CANCELLED','INVALID') 
GROUP BY order_number
ORDER BY total_amount_spent DESC
LIMIT 5


--MoM growth rate of sales revenue

WITH revenue_monthly AS (
SELECT DATE_TRUNC('month', order_date) AS month,
SUM(amount_per_unit * ordered_quantity - (item_discount)) AS sales_revenue
FROM sample1
WHERE order_status NOT IN ('CANCELLED', 'INVALID')
GROUP BY month
)
SELECT a.month,
	a.sales_revenue,
	(a.sales_revenue - LAG(a.sales_revenue, 1) OVER (ORDER BY a.month)) / LAG (a.sales_revenue, 1)
	OVER (ORDER BY a.month) AS sales_growth_rate
FROM revenue_monthly a;


--Percentage of orders that were canceled

SELECT 
(SELECT COUNT(DISTINCT order_number) FROM sample1 WHERE order_status = 'CANCELLED') * 100.0 / 
(SELECT COUNT(DISTINCT order_number) FROM sample1) AS cancellation_percentage;